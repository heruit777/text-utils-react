{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","id","className","isCustom","mode","style","height","borderBottom","href","title","type","aboutText","onClick","toggleMode","TextForm","regex","useState","text","setText","color","heading","rows","value","backgroundColor","onChange","event","target","spellCheck","newText","toUpperCase","showAlert","code","search","replace","tab","slash","input","index","charAt","arrOfStr","split","splice","join","para","toLowerCase","slice","length","console","log","test","document","getElementById","select","execCommand","match","Alert","alert","role","word","lower","capitalize","msg","defaultProps","App","setMode","setAlert","setIsCustom","setTimeout","body","colorVal","a","querySelectorAll","span","h3","h2","p","colorPickerBg","colorPickerText","checked","display","removeAttribute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4e98db8d.chunk.js","sourcesContent":["// import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <nav id=\"navBar\" className={!props.isCustom ? `navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}` : `navbar navbar-expand-lg`} style={{ height: \"60px\", borderBottom: props.mode === \"dark\" ? \"1px solid white\" : \"1px solid black\" }}>\r\n            <div className=\"container d-flex justify-content-center align-items-center\" id=\"content\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    {props.title}\r\n                </a>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse align-items-center\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" >\r\n                                Home\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\" >\r\n                                {props.aboutText}\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                    <input\r\n                        className=\"form-control me-2\"\r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        aria-label=\"Search\"\r\n                    />\r\n                    <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                        Search\r\n                    </button>\r\n                </form> */}\r\n\r\n                    <div className={`form-check form-switch text-${props.mode === \"dark\" ? \"light\" : \"dark\"} mx-3`} id=\"darkMode\"\r\n                    style={props.isCustom ? {\"display\":\"none\"} : {\"display\":\"block\"}}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" />\r\n                        <span>Dark Mode</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n// sets the type of props\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n// set the default value if no value is given\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: 'About'\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    // Uppercase\r\n    const handleUpClick = () => {\r\n        // console.log('Upper case was clicked');\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Convert to UpperCase\", \"success\");\r\n    };\r\n\r\n    // to write \r\n    const handleOnChange = (event) => {\r\n        // console.log('You changed the textarea');\r\n        setText(event.target.value);\r\n    };\r\n\r\n    // to change bootstrap code to jsx *** for => htmlFor, style=\"width: 18rem\" => style={{width: \"18rem\"}}\r\n    const handleHtmlToReactJsxClick = () => {\r\n        let code = text;\r\n\r\n        // class => className, tabindex => tabIndex\r\n        // **** for class to className\r\n        let regex = /class=/;\r\n        while (code.search(regex) !== -1) {\r\n            // console.log(code.search(regex));\r\n            code = code.replace(regex, \"className=\");\r\n        }\r\n\r\n        // tabindex => tabIndex\r\n        let tab = /tabindex=/;\r\n        while (code.search(tab) !== -1) {\r\n            // console.log(code.search(tab));\r\n            code = code.replace(tab, \"tabIndex=\");\r\n        }\r\n\r\n        // href=\"#\" => href=\"/\"\r\n        let slash = /href=\"#\"/;\r\n        while (code.search(slash) !== -1) {\r\n            // console.log(code.search(slash));\r\n            code = code.replace(slash, 'href=\"/\"');\r\n        }\r\n\r\n\r\n        //    closing singular tags\r\n        // <img> => <img/>\r\n        // <hr> => <hr/>\r\n        let input = /<([inputhrbmg])+ ([ \\w\"=\\-@#.\\n\\t>])+>/gi;\r\n        // get the index of first character of the matched regex and puts \" /\" before \">\".\r\n        while (code.search(input) !== -1) {\r\n            let index = code.search(input);\r\n            while (code.charAt(index) !== '>') {\r\n                // console.log(index, code.charAt(index));\r\n                index++;\r\n            }\r\n            // console.log(index);\r\n            let arrOfStr = code.split('');\r\n            arrOfStr.splice(index, 0, ' ', '/');\r\n            code = arrOfStr.join('');\r\n        }\r\n\r\n        // to remove \"/\" from p tag. It is an error of the \"input\" regex.\r\n        let para = /<p ([ \\w=\\-\"'@\\n\\t])+\\/>/gi;\r\n        while (code.search(para) !== -1) {\r\n            let index = code.search(para);\r\n            while (code.charAt(index) !== '/') {\r\n                // console.log(index, code.charAt(index));\r\n                index++;\r\n            }\r\n            let arrOfStr = code.split('');\r\n            arrOfStr.splice(index, 1);\r\n            code = arrOfStr.join('');\r\n        }\r\n        setText(code);\r\n    };\r\n\r\n    // LowerCase\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Convert to LowerCase\", \"success\");\r\n    };\r\n\r\n    // clear\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText)\r\n    }\r\n\r\n    // copy\r\n    const handleCopyClick = () => {\r\n        let textUtils = document.getElementById('myBox');\r\n        textUtils.select();\r\n        document.execCommand('copy');\r\n    }\r\n\r\n    // for word\r\n    const regex = /([[\\]\\\\+\\w\\d.(),\"'-])+/gi;\r\n    const decide = () => {\r\n        if (text === \"\") {\r\n            return 0;\r\n        }\r\n\r\n        return text.match(regex).length;\r\n    }\r\n\r\n    // to capitalize first char of first word, after '.' and after enter.\r\n    const handleCapitalizeClick = () => {\r\n        const regex = /\\.([ \\n\\t])+[a-z]/g;\r\n        let code = text;\r\n        code = code.charAt(0).toUpperCase() + code.slice(1, code.length);\r\n        while (code.search(regex) !== -1) {\r\n            console.log('entered');\r\n            let index = code.search(regex);\r\n            console.log(code.charAt(index));\r\n            while (!/[a-z]/.test(code.charAt(index))) {\r\n                index++;\r\n                console.log('entered 2');\r\n            }\r\n            console.log(code.charAt(index).toUpperCase());\r\n            let arrOfStr = code.split('');\r\n            arrOfStr.splice(index, 1, code.charAt(index).toUpperCase());\r\n            code = arrOfStr.join('');\r\n        }\r\n        setText(code);\r\n\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"New Text\";  // wrong way to change the state\r\n    // setText(\"New Text\"); // right way to change the state\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n\r\n\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} style={{ backgroundColor: props.mode === \"dark\" ? \"#282c34\" : \"white\", color: props.mode === \"dark\" ? \"#bc9caf\" : \"black\" }} onChange={handleOnChange} spellCheck=\"false\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleHtmlToReactJsxClick}>Convert Boostrap Html to React JSX</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lowercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCapitalizeClick}>Capitalize</button>\r\n                <button className=\"btn btn-primary mx-2\" data-clipboard-target=\"#myBox\" id=\"btnCopy\" onClick={handleCopyClick}>Copy to Clipboard</button>\r\n\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n                <h2>Your text Summary</h2>\r\n                <p>{decide()} words and {text.length > 0 ? text.match(/./g).length : 0} Characters</p>\r\n                <p>{text.length > 0 ? 0.008 * text.split(\" \").length : 0} Minutes Read</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length > 0 ? text : \"Enter something in the textbox above to preview it here.\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <b>{capitalize(props.alert.type)} {props.alert.msg}</b>\r\n        </div>\r\n    )\r\n}\r\n","// import logo from \"./logo.svg\";\nimport React, { useState } from 'react'\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\"\nimport TextForm from \"./components/TextForm\"\nimport Alert from \"./components/Alert\"\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enable \n  const [alert, setAlert] = useState(null);\n  const [isCustom, setIsCustom] = useState(false);\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark');\n      document.body.style.backgroundColor = '#08173b';\n      showAlert(\"Dark Mode has been enabled\", \"success\")\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\")\n    }\n  };\n\n  // custom color\n  const handleCustom = (event) => {\n\n    let colorPickerBg = document.getElementById('colorPickerBg'); // change color of background\n    let colorPickerText = document.getElementById('colorPickerText'); // change color of text\n\n    if (event.target.checked && mode === \"light\") {\n      console.log(\"custom mode on in light mode\");\n      // custom mode on.\n      setIsCustom(true);\n      colorPickerBg.style.display = \"block\";\n      colorPickerText.style.display = \"block\";\n\n      // change color of anchor tag\n      // background not changing \n      // \n\n      console.log(mode);\n      let a = document.querySelectorAll('a');\n      for (let items of a) {\n        items.style.color = \"Black\";\n      }\n\n    } else if (event.target.checked && mode === \"dark\") {\n      setIsCustom(true);\n      colorPickerBg.style.display = \"block\";\n      colorPickerText.style.display = \"block\";\n      console.log('custom mode on in dark mode');\n\n\n      console.log(mode);\n      let a = document.querySelectorAll('a');\n      for (let items of a) {\n        items.style.color = \"white\";\n      }\n    } else {\n      console.log('custom mode off');\n      console.log(mode);\n      setIsCustom(false);\n      colorPickerBg.style.display = \"none\";\n      colorPickerText.style.display = \"none\";\n\n      // remove style from navbar anchor tag\n      let a = document.querySelectorAll('a');\n      for (let items of a) {\n        items.removeAttribute('style');\n      }\n      // remove style from body\n      if (mode === \"dark\") {\n        document.body.style.backgroundColor = '#08173b';\n      } else {\n        document.body.removeAttribute('style');\n      }\n\n      // span\n      let span = document.querySelectorAll('span');\n      for (let items of span) {\n        items.removeAttribute('style');\n      }\n\n      // h3\n      let h3 = document.querySelectorAll('h3');\n      for (let items of h3) {\n        items.removeAttribute('style');\n      }\n      // h2\n      let h2 = document.querySelectorAll('h2');\n      for (let items of h2) {\n        items.removeAttribute('style');\n      }\n      // p\n      let p = document.querySelectorAll('p');\n      for (let items of p) {\n        items.removeAttribute('style');\n      }\n\n    }\n\n\n  }\n  // background Color\n  const changeBg = (event) => {\n    if (isCustom) {\n      let colorVal = event.target.value;\n      console.log(colorVal);\n      document.body.style.backgroundColor = `${colorVal}`;\n    }\n\n  }\n\n  // Text\n  const changeText = (event) => {\n    if (isCustom) {\n      let colorVal = event.target.value;\n      console.log(colorVal);\n      // anchor tag\n      let a = document.querySelectorAll('a');\n      for (let items of a) {\n        items.style.color = `${colorVal}`;\n      }\n\n      // span\n      let span = document.querySelectorAll('span');\n      for (let items of span) {\n        items.style.color = `${colorVal}`;\n      }\n\n      // h3\n      let h3 = document.querySelectorAll('h3');\n      for (let items of h3) {\n        items.style.color = `${colorVal}`;\n      }\n      // h2\n      let h2 = document.querySelectorAll('h2');\n      for (let items of h2) {\n        items.style.color = `${colorVal}`;\n      }\n      // p\n      let p = document.querySelectorAll('p');\n      for (let items of p) {\n        items.style.color = `${colorVal}`;\n      }\n\n\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Text-Utils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} isCustom={isCustom} />\n      <Alert alert={alert} />\n      {/* Custom Mode */}\n      <div className=\"container m-3\">\n\n        <div className=\"container w-25\" style={{ \"display\": \"none\" }} id=\"colorPickerBg\">\n          <div className={`input-group text-${mode === \"light\" ? \"dark\" : \"light\"} d-flex align-items-center justify-content-center`} style={{ \"width\": \"300px\" }}>\n            <span>Change Background Color</span>\n            <input type=\"color\" className=\"m-3\" onChange={changeBg} style={{ \"width\": \"50px\" }} />\n          </div>\n        </div>\n\n        <div className=\"container w-25\" style={{ \"display\": \"none\" }} id=\"colorPickerText\">\n          <div className={`input-group text-${mode === \"light\" ? \"dark\" : \"light\"} d-flex align-items-center justify-content-center`} style={{ \"width\": \"300px\" }}>\n            <span>Change Text Color</span>\n            <input type=\"color\" className=\"m-3\" onChange={changeText} style={{ \"width\": \"50px\" }} />\n          </div>\n        </div>\n\n        <div className={`form-check form-switch text-${mode === \"light\" ? \"dark\" : \"light\"} mx-3`}>\n          <input className=\"form-check-input\" onChange={handleCustom} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\n          <span>Custom Mode</span>\n        </div>\n      </div>\n\n      <div className=\"container my-3\" >\n        <TextForm heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert} />\n        {/* <Switch>\n            {/* /users ---> Component 1\n            /users/home ---> Component 2 \n            <Route exact path=\"/about\">  \n              <About /> \n            </Route>\n            <Route exact path=\"/\">\n            </Route>\n          </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}